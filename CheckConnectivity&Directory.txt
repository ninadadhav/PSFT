#!/bin/bash

LogMsg(){
        local log=$1
        local msg=$2
        local pid=$$
        local now=$(date +'%s')
        local stamp=$(date --date "@${now}" +'%Y/%m/%d %H:%M:%S')
        echo "${stamp}-${pid}-${msg}" >>$log
}

CreateLog(){
        file=$1
        [ ! -e ${file} ] && touch $file
        sudo chmod a+rw $file
        sudo chown opc:opc $file
}


input_csv(){
echo Enter the path to the Input CSV File...
read -p 'Input Path to the file and press Enter : ' inputpath
if [[ -f $inputpath ]]
   then
       LogMsg $LOGFILE "File found...proceeding to Tar Process"
   else
       echo CSV File does not exist at $inputpath ....Exiting !!!
       LogMsg $LOGFILE "CSV File does not exist at $inputpath ....Exiting !!!"
       echo
       exit 1
fi
sed -n '2,$p' <$inputpath > parsed_file.csv
LogMsg $LOGFILE "Installing Dos2unix Package for File conversion"
in=$(sudo yum install -q -y dos2unix && dos2unix -q parsed_file.csv)
LogMsg $LOGFILE "'$in'"
echo
}


source_connectivity(){
for f in $(cat parsed_file.csv | cut -d"," -f2);
  do
    status=$(ssh -q -o StrictHostKeyChecking=no -o BatchMode=yes -o ConnectTimeout=5 -i /home/opc/keys/ocs_key opc@$f echo ok 2>&1)
    if [[ $status == ok ]] ; then
          echo Connectivity Established to $f !!
          echo "Checking if $mpoint2 is present on $f"
          ssh -n -q -o StrictHostKeyChecking=no -i /home/opc/keys/ocs_key opc@$f "
          if [[ -d $mpoint2 ]]; then
              echo Directory is Present at $f
          else
              echo Directory $mpoint2 DOES NOT EXIST on Server $f Please Check and re-run the code!!!
          fi" 1>source_servers.txt

          source_out=`cat /home/opc/source_servers.txt`
          if [[ "${source_out}" == *"DOES NOT EXIST"* ]]; then
              echo "*********************************************************************************************************"
              echo "ERROR FOUND ------------> Directory $mpoint2 DOES NOT EXIST on Server $f"
              echo "*********************************************************************************************************"
              echo
          else
              echo "Directory $mpoint2 present"
              echo
          fi

    elif [[ $status == "Permission denied"* ]] ; then
       echo "*************************************************************************************************************************"
       echo Permission Denied...Please check the ssh configuration of the Target Server
       echo "Cannot determine if $mpoint2 is present on Source $f. Fix connectivity issue and run again "
       echo "*************************************************************************************************************************"
    else
       echo "*************************************************************************************************************************"
       echo Incorrect Authentication..Please check the IP Address and Key provided in the path to the Target Server.
       echo "Cannot determine if $mpoint2 is present on Source $f . Fix connectivity issue and run again "
       echo "*************************************************************************************************************************"
    fi >>final.log
    sleep 1
   done
   cat final.log
   final=`cat /home/opc/final.log`
   if [[ "${final}" == *"DOES NOT EXIST"* ]]; then
              echo ____________________________________________________________________________________________
              echo
              echo "One or more Errors have been found and highlighted above...Please fix and rerun...EXITING"
              echo ____________________________________________________________________________________________
              echo
              exit 1
   else
              echo _________________________________________________________
              echo
              echo "NO ERRORS FOUND.........PROCEEDING"
              echo _________________________________________________________
   fi

}

target_connectivity(){
for g in $(cat parsed_file.csv | cut -d"," -f1);
  do
    status1=$(ssh -q -o StrictHostKeyChecking=no -o BatchMode=yes -o ConnectTimeout=5 -i /home/opc/keys/ocs_key opc@$g echo ok 2>&1)
    if [[ $status1 == ok ]] ; then
          echo Connectivity Established to $g !!
          echo "Checking if $mountpoint2 is present on $g"
          ssh -n -q -o StrictHostKeyChecking=no -i /home/opc/keys/ocs_key opc@$g "
          if [[ -d $mountpoint2 ]]; then
              echo Directory is Present at $g
          else
              echo Directory $mountpoint2 DOES NOT EXIST on Server $g Please Check and re-run the code!!!
          fi" 1>target_servers.txt

          target_out=`cat /home/opc/target_servers.txt`
          if [[ "${target_out}" == *"DOES NOT EXIST"* ]]; then
              echo "*********************************************************************************************************"
              echo "ERROR FOUND ------------> Directory $mountpoint2 DOES NOT EXIST on Server $g"
              echo "*********************************************************************************************************"
              echo
          else
              echo "Directory $mountpoint2 present"
              echo
          fi

    elif [[ $status1 == "Permission denied"* ]] ; then
       echo "*************************************************************************************************************************"
       echo Permission Denied...Please check the ssh configuration of the Target Server
       echo "Cannot determine if $mountpoint2 is present on Source $g. Fix connectivity issue and run again "
       echo "*************************************************************************************************************************"
    else
       echo "*************************************************************************************************************************"
       echo Incorrect Authentication..Please check the IP Address and Key provided in the path to the Target Server.
       echo "Cannot determine if $mountpoint2 is present on Source $g . Fix connectivity issue and run again "
       echo "*************************************************************************************************************************"
    fi >>final1.log
    sleep 1
   done
   cat final1.log
   final1=`cat /home/opc/final1.log`
   if [[ "${final1}" == *"DOES NOT EXIST"* ]]; then
              echo ____________________________________________________________________________________________
              echo
              echo "One or more Errors have been found and highlighted above...Please fix and rerun...EXITING"
              echo ____________________________________________________________________________________________
              echo
              exit 1
   else
              echo _________________________________________________________
              echo
              echo "NO ERRORS FOUND.........PROCEEDING"
              echo _________________________________________________________
   fi

}

LOGFILE=/var/log/psft-$HOSTNAME.log
CreateLog ${LOGFILE}
input_csv
rm -rf /home/opc/source_servers.txt /home/opc/target_servers.txt /home/opc/final.log

read -p 'Enter Mount Point Directory Path for Source Servers: ' mpoint
echo
mpoint1=$mpoint
mpoint2=${mpoint1%/}

read -p 'Enter Mount Point Directory Path for Target Servers: ' mountpoint
echo
mountpoint1=$mountpoint
mountpoint2=${mountpoint1%/}

source_connectivity
sleep 1
echo

target_connectivity
sleep 1

echo
echo ___________________________________
echo COMPLETED
echo ___________________________________
echo
