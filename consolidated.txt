#!/bin/bash
# Created by Ninad Adhav
# Email - ninad.adhav@oracle.com

LogMsg(){
        local log=$1
        local msg=$2
        local pid=$$
        local now=$(date +'%s')
        local stamp=$(date --date "@${now}" +'%Y/%m/%d %H:%M:%S')
        echo "${stamp}-${pid}-${msg}" >>$log
}

CreateLog(){
        file=$1
        [ ! -e ${file} ] && touch $file
        sudo chmod a+rw $file
        sudo chown opc:opc $file
}

input_csv(){
echo Enter the path to the Input CSV File...
read -p 'Input Path to the file and press Enter : ' inputpath
if [[ -f $inputpath ]]
   then
       LogMsg $LOGFILE "File found...proceeding to Tar Process"
   else
       echo CSV File does not exist at $inputpath ....Exiting !!!
       LogMsg $LOGFILE "CSV File does not exist at $inputpath ....Exiting !!!"
       echo
       exit 1
fi
sed -n '2,$p' <$inputpath > parsed_file.csv
LogMsg $LOGFILE "Installing Dos2unix Package for File conversion"
in=$(sudo yum install -q -y dos2unix && dos2unix -q parsed_file.csv)
LogMsg $LOGFILE "'$in'"
echo
read -p 'Enter Mount Point Directory Path for Source Servers: ' mountpoint
mountpoint1=$mountpoint
mountpoint2=${mountpoint1%/}

read -p 'Enter Mount Point Directory Path for Target Servers: ' mpoint
mpoint1=$mpoint
mpoint2=${mpoint1%/}

echo "Following are the Source IP's  mentioned in the Load Sheet"
cat parsed_file.csv | cut -d"," -f2
echo
echo Following are the Directories associated with the Source IP Addresses
cat parsed_file.csv | cut -d"," -f4- | sed -e "s/,/ /g"
echo
}

tar1(){
x=(`cat parsed_file.csv | cut -d"," -f2`)
x1=${#x[@]}
y=(`cat parsed_file.csv | cut -d"," -f4- | sed -e "s/,/-/g"`)
y1=${#y[@]}
z=(`cat /home/opc/parsed_file.csv | cut -d"," -f2-3 | sed -e "s/ /-/g" | sed -e "s/,/-/g"`)
z1=${#z[@]}
for ((i=0,j=0,k=0 ; i<${x1},j<${y1},k<${z1} ; i++,j++,k++));
    do
       test=$(echo "${y[$i]}" | sed -e "s/-/ /g")
       echo Current Directories being Archived and Compressed are : $test
       LogMsg $LOGFILE "-----------------Connecting to Source ${x[$i]} --------------"
       out1=$(ssh -n -q -o StrictHostKeyChecking=no -i /home/opc/keys/ocs_key opc@${x[$i]} "cd $mountpoint2;
       sudo tar -cvPf ${z[$i]}.tar.gz --totals $test && echo; bash")
       echo
       LogMsg $LOGFILE "'$out1'"
       LogMsg $LOGFILE "----------------- TAR PROCESS COMPLETE FOR $test --------------"
       #ssh -n -q -o StrictHostKeyChecking=no -i /home/opc/keys/ocs_key opc@${x[$i]} "oci os object put -bn OCS_Migrations --file $mountpoint2/${z[$i]}.tar.gz; bash"
       #LogMsg $LOGFILE "----------------- UPLOADING ${z[$i]} TO OBJECT STORAGE --------------"
       #LogMsg $LOGFILE "File ${z[$i]}.tar.gz has been uploaded to OCS_MIgrations Bucket on Object Storage"
     done
}

upload2obj(){
cd $mountpoint2
for file in `ls $mountpoint2`;
do
   oci os object put -bn OCS_Migrations --file $file
   LogMsg $LOGFILE "File $file has been uploaded to the OCS_MIgrations Bucket on OCI Object Storage"
done
}

untar(){
a=(`cat parsed_file.csv | cut -d"," -f1`)
a1=${#a[@]}
b=(`cat /home/opc/parsed_file.csv | cut -d"," -f2-3 | sed -e "s/ /-/g" | sed -e "s/,/-/g"`)
b1=${#b[@]}
for ((u=0,v=0 ; u<${a1},v<${b1} ; u++,v++));
    do
       echo Current Directories being Archived and Compressed are : $test;
       LogMsg $LOGFILE "----------------- CONNECTING TO TARGET ${a[$u]} --------------"
       LogMsg $LOGFILE "----------------- DOWNLOADING ${b[$u]} FROM OBJECT STORAGE --------------"
       out=$(ssh -n -q -o StrictHostKeyChecking=no -i /home/opc/keys/ocs_key opc@${a[$u]} "oci os object bulk-download -bn OCS_Migrations --prefix ${b[$u]} --download-dir $mpoint2;
       cd $mpoint2
       tar -xvPf ${b[$u]}.tar.gz; bash")
       LogMsg $LOGFILE "'$out'"
       LogMsg $LOGFILE "----------------- COMPLETED DOWNLOAD of  ${b[$u]} FROM OBJECT STORAGE --------------"
       LogMsg $LOGFILE "----------------- TAR PROCESS COMPLETE--------------"
    done
}


LOGFILE=/var/log/psft-$HOSTNAME.log
CreateLog ${LOGFILE}

input_csv
tar1
upload2obj
#untar
echo ________________________________________________________________
echo
echo PROCESS COMPLETE...CHECK IF TARGET DIRECTORIES HAVE BEEN CREATED
echo ________________________________________________________________
